{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "self = <docker.api.client.APIClient object at 0x000001742B7F1A20>, response = <Response [404]>\n\n    def _raise_for_status(self, response):\n        \"\"\"Raises stored :class:`APIError`, if one occurred.\"\"\"\n        try:\n>           response.raise_for_status()\n\nC:\\Users\\ofris\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\docker\\api\\client.py:268: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [404]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localnpipe/v1.41/containers/eshop/identity.api:linux-latest/json\n\nC:\\Users\\ofris\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\models.py:1021: HTTPError\n\nThe above exception was the direct cause of the following exception:\n\n    @pytest.fixture()\n    # @pytest.mark.dependency(depends=[\"docker_manager\"])\n    def setup_docker_containers():\n        \"\"\"\n        Fixture to start all containers except the containers that have a representative simulator.\n        \"\"\"\n        docker_manager = DockerManager()\n        print(\"Setting up docker containers...\")\n    \n        representative_simulators_containers = [\"eshop/catalog.api:linux-latest\", \"eshop/payment.api:linux-latest\",\n                                 \"eshop/basket.api:linux-latest\"]\n    \n        # Start all containers, only if the current running containers amount is invalid.\n        if len(docker_manager.running_containers) != len(docker_manager.containers) - len(representative_simulators_containers):\n            docker_manager.start_all_containers()\n            sleep(3)\n            # Verify all containers are up and running\n            docker_manager.start_all_containers()\n    \n            # Stop all containers that have a related simulator\n            for container_name in representative_simulators_containers:\n                docker_manager.stop(container_name)\n    \n            sleep(10)\n    \n>           docker_manager.force_start(\"eshop/identity.api:linux-latest\")\n\ntests\\suites\\conftest.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\docker\\docker_utils.py:17: in force_start\n    while self.get_container_status(container_name) != 'Running' and timeout > 0:\nutils\\docker\\docker_utils.py:35: in get_container_status\n    return self.cli.containers.get(container_name).status()\nC:\\Users\\ofris\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\docker\\models\\containers.py:925: in get\n    resp = self.client.api.inspect_container(container_id)\nC:\\Users\\ofris\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\docker\\utils\\decorators.py:19: in wrapped\n    return f(self, resource_id, *args, **kwargs)\nC:\\Users\\ofris\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\docker\\api\\container.py:783: in inspect_container\n    return self._result(\nC:\\Users\\ofris\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\docker\\api\\client.py:274: in _result\n    self._raise_for_status(response)\nC:\\Users\\ofris\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\docker\\api\\client.py:270: in _raise_for_status\n    raise create_api_error_from_http_exception(e) from e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ne = HTTPError('404 Client Error: Not Found for url: http+docker://localnpipe/v1.41/containers/eshop/identity.api:linux-latest/json')\n\n    def create_api_error_from_http_exception(e):\n        \"\"\"\n        Create a suitable APIError from requests.exceptions.HTTPError.\n        \"\"\"\n        response = e.response\n        try:\n            explanation = response.json()['message']\n        except ValueError:\n            explanation = (response.content or '').strip()\n        cls = APIError\n        if response.status_code == 404:\n            explanation_msg = (explanation or '').lower()\n            if any(fragment in explanation_msg\n                   for fragment in _image_not_found_explanation_fragments):\n                cls = ImageNotFound\n            else:\n                cls = NotFound\n>       raise cls(e, response=response, explanation=explanation) from e\nE       docker.errors.NotFound: 404 Client Error for http+docker://localnpipe/v1.41/containers/eshop/identity.api:linux-latest/json: Not Found (\"No such container: eshop/identity.api:linux-latest\")\n\nC:\\Users\\ofris\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\docker\\errors.py:39: NotFound\n", "test_name": "test_mss", "rerun": "0"}}, "suite_name": "tests/suites/test_order_management_suite.py"}}}, "date": "March 18, 2023", "start_time": 1679131584.90429, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}