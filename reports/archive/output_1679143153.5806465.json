{"content": {"suites": {"0": {"status": {"total_pass": 2, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_catalog_stock_validation_process", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_catalog_stock_rejection_process", "rerun": "0"}}, "suite_name": "tests/suites/test_inventory_management_suite.py"}, "1": {"suite_name": "tests/suites/test_order_management_suite.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_mss", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_user_can_submit_an_order", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_user_can_cancel_order_on_status_1", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_user_can_cancel_order_on_status_2", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_user_can_cancel_order_on_status_3", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_user_can_not_cancel_order_on_status_4", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_user_can_not_cancel_order_on_status_5", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_user_can_ship_order_on_status_4", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_user_can_not_ship_order_on_status_1", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_user_can_not_ship_order_on_status_2", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_user_can_not_ship_order_on_status_3", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_user_can_not_ship_order_on_status_6", "rerun": "0"}}, "status": {"total_pass": 12, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "2": {"suite_name": "tests/suites/test_order_tracking_suite.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_submitted_order_status_appears_on_correct_state", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_awatingvalidation_order_status_appears_on_correct_state", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_stockconfirmed_order_status_appears_on_correct_state", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_paid_order_status_appears_on_correct_state", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_shipped_order_status_appears_on_correct_state", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_canceled_order_status_appears_on_correct_state", "rerun": "0"}}, "status": {"total_pass": 6, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "3": {"suite_name": "tests/suites/test_payment_processing_suite.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_payment_validation_process", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_payment_rejection_process", "rerun": "0"}, "2": {"status": "SKIP", "message": "('C:\\\\Users\\\\ofris\\\\Desktop\\\\Ofri\\\\Ness\\\\final-project-eshop-clone\\\\rafael-ness-bootcamp\\\\tests\\\\suites\\\\test_payment_processing_suite.py', 44, 'Skipped: Designated for nightly execution.')\n", "test_name": "test_payment_process_rejection_caused_by_server_timeout", "rerun": "0"}}, "status": {"total_pass": 2, "total_skip": 1, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "4": {"suite_name": "tests/suites/test_reliability_suite.py", "tests": {"0": {"status": "FAIL", "message": "       AttributeError: 'NoneType' object has no attribute 'queue_declare'\n", "test_name": "test_valid_data_recovery_on_crash_between_status_1_and_2", "rerun": "0"}, "1": {"status": "ERROR", "message": "@pytest.fixture()\n    # @pytest.mark.dependency(depends=[\"docker_manager\"])\n    def setup_docker_containers():\n        \"\"\"\n        Fixture to start all containers except the containers that have a representative simulator.\n        \"\"\"\n        docker_manager = DockerManager()\n        print(\"Setting up docker containers...\")\n    \n        representative_simulators_containers = [\"eshop/catalog.api:linux-latest\", \"eshop/payment.api:linux-latest\",\n                                                \"eshop/basket.api:linux-latest\"]\n    \n        # Start all containers, only if the current running containers amount is invalid.\n        if len(docker_manager.running_containers) != len(docker_manager.containers) - len(\n                representative_simulators_containers):\n            docker_manager.start_all_containers()\n            sleep(3)\n            # Verify all containers are up and running\n            docker_manager.start_all_containers()\n    \n            # Stop all containers that have a related simulator\n            for container_name in representative_simulators_containers:\n                docker_manager.stop(container_name)\n    \n            sleep(10)\n    \n>           docker_manager.force_start(\"bcb150ac21d645d8979fbcb7c9e6891c6536506617f94faad5af05e45ee66886\")\n\ntests\\suites\\conftest.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\docker\\docker_utils.py:17: in force_start\n    while self.get_container_status(container_id) != 'Running' and timeout > 0:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.docker.docker_utils.DockerManager object at 0x00000289CDF56230>\ncontainer_name = 'bcb150ac21d645d8979fbcb7c9e6891c6536506617f94faad5af05e45ee66886'\n\n    def get_container_status(self, container_name):\n>       return self.cli.containers.get(container_name).status()\nE       TypeError: 'str' object is not callable\n\nutils\\docker\\docker_utils.py:35: TypeError\n", "test_name": "test_valid_data_recovery_on_crash_between_status_2_and_3", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 1}}, "5": {"suite_name": "tests/suites/test_scalability_suite.py", "tests": {"0": {"status": "ERROR", "message": "file C:\\Users\\ofris\\Desktop\\Ofri\\Ness\\final-project-eshop-clone\\rafael-ness-bootcamp\\tests\\suites\\test_scalability_suite.py, line 8\n  @pytest.mark.scalability\n  @pytest.mark.loads\n  @pytest.mark.reliability\n  def test_valid_message_consumption_rate(docker_manager, rabbit_mq):\nE       fixture 'docker_manager' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, ddos_simulation, doctest_namespace, extra, faker, include_metadata_in_junit_xml, json_environment, json_report_path, load_env, metadata, monkeypatch, purge_all_queues, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, setup_docker_containers, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nC:\\Users\\ofris\\Desktop\\Ofri\\Ness\\final-project-eshop-clone\\rafael-ness-bootcamp\\tests\\suites\\test_scalability_suite.py:8\n", "test_name": "test_valid_message_consumption_rate", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_valid_pace_of_first_message_consumption", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "6": {"suite_name": "tests/suites/test_security_suite.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_authorized_user_orders_access", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_authorized_user_card_types_access", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_unauthorized_request_for_orders_is_denied", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_unauthorized_request_for_order_by_id_is_denied", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_unauthorized_request_for_get_card_types_is_denied", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_unauthorized_request_for_ship_order_is_denied", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_unauthorized_request_for_cancel_order_is_denied", "rerun": "0"}, "7": {"status": "SKIP", "message": "('C:\\\\Users\\\\ofris\\\\Desktop\\\\Ofri\\\\Ness\\\\final-project-eshop-clone\\\\rafael-ness-bootcamp\\\\tests\\\\suites\\\\test_security_suite.py', 129, 'Skipped: Designated for nightly execution.')\n", "test_name": "test_order_creation_while_handling_ddos_simulation", "rerun": "0"}}, "status": {"total_pass": 7, "total_skip": 1, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}}}, "date": "March 18, 2023", "start_time": 1679135681.0015903, "total_suite": 7, "status": "FAIL", "status_list": {"pass": "30", "fail": "1", "skip": "2", "error": "2", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "35"}